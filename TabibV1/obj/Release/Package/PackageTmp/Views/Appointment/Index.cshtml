@model IEnumerable<TabibV1.Models.appointments>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .line {
        width: 100%;
        text-align: center;
        border-bottom: 1px solid #000;
        line-height: 0.1em;
        margin: 10px 0 20px;
    }

        .line span {
            background: #fff;
            padding: 0 10px;
        }
</style>



<br />
<br />

@{
    var oldAppointment = Model.Where(item=>item.appointmentsTime.Date<DateTime.Today).OrderByDescending(x=>x.appointmentsTime);
    var TodayAppointment = Model.Where(item => item.appointmentsTime.Date == DateTime.Today).OrderBy(x => x.appointmentsTime);
    var LaterAppointment = Model.Where(item => item.appointmentsTime.Date > DateTime.Today).OrderBy(x => x.appointmentsTime);
    Dictionary<string, SelectList> ViewBagTime = ViewBag.time;                                  
}

<h3 class="line"><span>Today Appointment</span></h3>
<br />
<br />
@if (TodayAppointment.Count() == 0)
{
    <h4 style="text-align:center;">No Today Appointment</h4>
     <br />
    <hr />
    <br />
}
else { 
for (var i = 0; i < TodayAppointment.Count(); i = i + 3)
{
    <div class="row">

        @for (var e = i; e < i + 3 && e < TodayAppointment.Count(); e++) { 
        <div class="col-md-4">
            <div class="media" style="border:1px solid #ccc;margin-top:0px;padding:10px 1px 10px 10px;border-radius:10px;" id="appointment_@TodayAppointment.ElementAt(e).appointmentsId" name="appointment_@TodayAppointment.ElementAt(e).appointmentsId">
                <div class="media-body">
                    <h4 class="media-heading">
                        <strong>Doctor </strong> @TodayAppointment.ElementAt(e).DoctorName
                        @if (TodayAppointment.ElementAt(e).doctor != null)
                        {
                            <small><i>@TodayAppointment.ElementAt(e).doctor.specialty</i></small>
                        }
                    </h4>
                    <p><span class="glyphicon glyphicon-user"></span>&emsp; @TodayAppointment.ElementAt(e ).patient.user.UserName @TodayAppointment.ElementAt(e).patient.user.LastName</p>  <!--   -->
                    <p><span class="glyphicon glyphicon-question-sign"></span>&emsp;  @TodayAppointment.ElementAt(e).Question </p>
                    <p><span class="glyphicon glyphicon-time"></span>&emsp; 
                    @if (DateTime.Now <= TodayAppointment.ElementAt(e).appointmentsTime.AddMinutes(30) && DateTime.Now >= TodayAppointment.ElementAt(e).appointmentsTime) {
                     <text>now</text> }
                    else {
                        @Html.DisplayFor(m => TodayAppointment.ElementAt(e).appointmentsTime)
                    }
                    </p>
                    @if (TodayAppointment.ElementAt(e).evaluation != null && TodayAppointment.ElementAt(e).evaluation > 0)
                    {
                        <p><span class="glyphicon glyphicon-star-empty"></span>&emsp; 
                        @for (int j = 0; j < 5; j++)
{
    if (j < @TodayAppointment.ElementAt(e).evaluation)
    {<span class="glyphicon glyphicon-star"></span> }
    else
    {
        <span class="glyphicon glyphicon-star-empty"></span>
    }   }</p>
                    }
                    @if (TodayAppointment.ElementAt(e).Note != null)
                    {
                        <p><span class="glyphicon glyphicon-pencil"></span>&emsp; @TodayAppointment.ElementAt(e).Note</p>
                    }
                    
                    @if (User.IsInRole("patient") && TodayAppointment.ElementAt(e).appointmentsTime.AddMinutes(30) < DateTime.Now)
                    {
                        <a class="btn btn-default  glyphicon glyphicon-edit" data-toggle="modal" data-target="#myModal_@TodayAppointment.ElementAt(e).appointmentsId" style="float: left; margin: 10px;"> </a>
                    }
                </div>
            </div>
        </div>
      
        
            
            if (User.IsInRole("patient") && TodayAppointment.ElementAt(e).appointmentsTime.AddMinutes(30) < DateTime.Now)
      { 
                         <!-- Modal -->
    <div class="modal fade" id="myModal_@TodayAppointment.ElementAt(e).appointmentsId" role="dialog">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
@using (Html.BeginForm("Edit", "Appointment", FormMethod.Post))
{
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h2>Edit <small>Appointment</small> </h2>
                </div>

                <div class="modal-body">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => TodayAppointment.ElementAt(e).appointmentsId)
                        @Html.HiddenFor(model => TodayAppointment.ElementAt(e).appointmentsTime)

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)

                            <div class="form-group">
                                <span class="control-label col-md-2 glyphicon glyphicon-user"></span>
                                <div class="col-md-6">
                                        @Html.DisplayFor(m => TodayAppointment.ElementAt(e).DoctorName, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                <span class="control-label col-md-2 glyphicon glyphicon-time"></span>
                                <div class="col-md-3">
                                    <div class="">@TodayAppointment.ElementAt(e).appointmentsTime.ToShortDateString()</div>
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(m => TodayAppointment.ElementAt(e).appointmentsTime.TimeOfDay, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                <span class="control-label col-md-2 glyphicon glyphicon-question-sign"></span>
                                <div class="col-md-6">
                                        @Html.DisplayFor(m => TodayAppointment.ElementAt(e).Question, new { @class = "form-control", @placeholder = "Question?" })
                                 </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("feedBack", new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.TextBoxFor(model => TodayAppointment.ElementAt(e).Note, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => TodayAppointment.ElementAt(e).Note)
                                </div>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(model => TodayAppointment.ElementAt(e).evaluation, new { @type = "number",@class = "form-control", max = "1", min = "5" })
                                    @Html.ValidationMessageFor(model => TodayAppointment.ElementAt(e).evaluation)
                                </div>
                            </div>
                        </div>
                    
                </div>

                <div class="modal-footer">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10" style="margin-top:10px;">
                            <input type="submit" id="save" value="Edit" class="btn btn-default" />
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                    <div class="alert alert-danger" style="display:none;" id="error">
                        <span id="view-error"></span>
                    </div>
                </div>
                }
            </div>

        </div>
    </div>
      }
     }
        
    </div>

    <br />
    <hr />
    <br />
}
}


<h3 class="line"><span>Later Appointment</span></h3>
<br />
<br />
@if (LaterAppointment.Count() == 0)
{
    <h4 style="text-align:center;">No Later Appointment</h4>
     <br />
    <hr />
    <br />
}
else
{
for (var i = 0; i < LaterAppointment.Count(); i = i + 3)
{
    <div class="row">

    @for (var e = i; e < i + 3 && e < LaterAppointment.Count(); e++)
    {
        <div class="col-md-4">
            <div class="media" style="border:1px solid #ccc;margin-top:0px;padding:10px 1px 10px 10px;border-radius:10px;" id="appointment_@LaterAppointment.ElementAt(e).appointmentsId" name="appointment_@LaterAppointment.ElementAt(e).appointmentsId">
                <div class="media-body">
                    <h4 class="media-heading">
                        <strong>Doctor </strong> @LaterAppointment.ElementAt(e).DoctorName
                        @if (LaterAppointment.ElementAt(e).doctor != null)
                        {
                            <small><i>@LaterAppointment.ElementAt(e).doctor.specialty</i></small>
                        }
                    </h4>
                    <p><span class="glyphicon glyphicon-user"></span>&emsp; @LaterAppointment.ElementAt(e ).patient.user.UserName @LaterAppointment.ElementAt(e).patient.user.LastName</p>  <!--   -->
                    <p><span class="glyphicon glyphicon-question-sign"></span>&emsp;  @LaterAppointment.ElementAt(e).Question </p>
                    <p><span class="glyphicon glyphicon-time"></span>&emsp; @Html.DisplayFor(m => LaterAppointment.ElementAt(e).appointmentsTime)  </p>
                    @if (LaterAppointment.ElementAt(e).evaluation != null && LaterAppointment.ElementAt(e).evaluation > 0)
                    {
                        <p><span class="glyphicon glyphicon-star-empty"></span>&emsp; 
@for (int j = 0; j < 5; j++)
{
    if (j < @LaterAppointment.ElementAt(e).evaluation)
    {<span class="glyphicon glyphicon-star"></span>
    }
    else
    {
        <span class="glyphicon glyphicon-star-empty"></span>
    }
} </p>
                        
                        
                    }
                    @if (LaterAppointment.ElementAt(e).Note != null)
                    {
                        <p><span class="glyphicon glyphicon-pencil"></span>&emsp; @LaterAppointment.ElementAt(e).Note</p>
                    }

                    @if (User.IsInRole("patient"))
                    {
                        <a class="btn btn-default  glyphicon glyphicon-edit" data-toggle="modal" data-target="#myModal_@LaterAppointment.ElementAt(e).appointmentsId" onclick="changeTimeList(@LaterAppointment.ElementAt(e).appointmentsId)" style="float: left; margin: 10px;"> </a>
                        <!--<a class="btn btn-default  glyphicon glyphicon-edit" style="float: left; margin: 10px;" href="2Url.Action("Edit", "appointment", new { id = 2LaterAppointment.ElementAt(e).appointmentsId })"> </a>            -->
                        using (Html.BeginForm("Delete", "Appointment", FormMethod.Post))
                        {
                               @Html.HiddenFor(model => @LaterAppointment.ElementAt(e).appointmentsId)   @* delete *@
                               <button type="submit" onclick="return window.confirm('Delete Appointment \nAre you sure you want to delete this Appointment?')" class="btn btn-default glyphicon glyphicon-trash" style="margin:10px;"></button>
                                @Html.AntiForgeryToken()
                        }                    
                    }

                </div>
            </div>
        </div>
        
       
                         <!-- Modal -->
    <div class="modal fade" id="myModal_@LaterAppointment.ElementAt(e).appointmentsId" role="dialog">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
@using (Html.BeginForm("Edit", "Appointment", FormMethod.Post))
{
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h2>Edit <small>Appointment</small> </h2>
                </div>

                <div class="modal-body">
                        @Html.AntiForgeryToken()
                    
                        @Html.HiddenFor(model => LaterAppointment.ElementAt(e).appointmentsId)
                        @Html.HiddenFor(model => LaterAppointment.ElementAt(e).appointmentsTime)
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)

                            <div class="form-group">
                                <span class="control-label col-md-2 glyphicon glyphicon-user"></span>
                                <div class="col-md-6">
                                        @Html.DisplayFor(m => LaterAppointment.ElementAt(e).DoctorName, new { @class = "form-control" }) @* >> name*@
                                </div>
                            </div>

                            <div class="form-group">
                                <span class="control-label col-md-2 glyphicon glyphicon-time"></span>
                                <div class="col-md-3">
                                    <div class="">@LaterAppointment.ElementAt(e).appointmentsTime.ToShortDateString()</div>
                                 </div>
                                <div class="col-md-3">
                                    @Html.DropDownList("Time", ViewBagTime[LaterAppointment.ElementAt(e).doctor.doctorsId.ToString()], new { @class = "form-control", onchange = "" })
                                    @*Html.DropDownList("Time_" + LaterAppointment.ElementAt(e).appointmentsId, Enumerable.Empty<SelectListItem>(), LaterAppointment.ElementAt(e).appointmentsTime.TimeOfDay.ToString(), new { @class = "form-control", onchange = "" }) *@
                                    @Html.ValidationMessageFor(m => LaterAppointment.ElementAt(e).appointmentsTime);
                                </div>
                            </div>

                            <div class="form-group">
                                <span class="control-label col-md-2 glyphicon glyphicon-question-sign"></span>
                                <div class="col-md-6">
                                        @Html.TextBoxFor(m => LaterAppointment.ElementAt(e).Question, new { @class = "form-control", @placeholder = "Question?" })
                                        @Html.ValidationMessageFor(model => LaterAppointment.ElementAt(e).Question)
                                </div>
                            </div>
                        </div>
                </div>
                <div class="modal-footer">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10" style="margin-top:10px;">
                            <input type="submit" id="save" value="Edit" class="btn btn-default" />
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                    <div class="alert alert-danger" style="display:none;" id="error">
                        <span id="view-error"></span>
                    </div>
                </div>
                }
            </div>

        </div>
    </div>
    
    }
    </div>

    <br />
    <hr />
    <br />
}
}

<h3 class="line"><span>Old Appointment</span></h3>
<br />
<br />
@if (oldAppointment.Count() == 0)
{
    <h4 style="text-align:center;">No Old Appointment</h4>
     <br />
    <hr />
    <br />
}
else
{
  for (var i = 0; i < oldAppointment.Count(); i = i + 3)
{
    <div class="row">
@for (var e = i; e < i + 3 && e < oldAppointment.Count(); e++)
{
        <div class="col-md-4">
            <div class="media" style="border:1px solid #ccc;margin-top:0px;padding:10px 1px 10px 10px;border-radius:10px;" id="appointment_@oldAppointment.ElementAt(e).appointmentsId" name="appointment_@oldAppointment.ElementAt(e).appointmentsId">
                <div class="media-body">
                    <h4 class="media-heading"><strong>Doctor </strong> @oldAppointment.ElementAt(e).DoctorName  
                    @if (oldAppointment.ElementAt(e).doctor != null)
                    {
                      <small><i>@oldAppointment.ElementAt(e).doctor.specialty</i></small>
                    }
                    </h4>
                    <p><span class="glyphicon glyphicon-user"></span>&emsp; @oldAppointment.ElementAt(e ).patient.user.UserName @oldAppointment.ElementAt(e).patient.user.LastName</p>  <!--   -->
                    <p><span class="glyphicon glyphicon-question-sign"></span>&emsp;  @oldAppointment.ElementAt(e).Question </p>
                    <p><span class="glyphicon glyphicon-time"></span>&emsp; @Html.DisplayFor(m => oldAppointment.ElementAt(e).appointmentsTime)  </p>
                </div>
            </div>
        </div>
    }      
    </div>

    <br />
    <hr />
    <br />
}
}
@if (Model.Count() != 0)
{
    <div class="row">
        <div class="col-md-12">
            @Html.Partial("_PaggingPartial")
        </div>
    </div>
}

@if (User.IsInRole("patient"))
{
    @Html.ActionLink("New Appointment", "Create", "Appointment", new { @class = "btn btn-default" })
    <hr />
}
<br />
@{
    string jsonString = Newtonsoft.Json.JsonConvert.SerializeObject(
           ViewBag.time, typeof(Dictionary<string, List<TimeSpan>>),
           Newtonsoft.Json.Formatting.Indented,
           new Newtonsoft.Json.JsonSerializerSettings()
           {
               ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore
           });
}

<script>
    var time =JSON.parse(('@Html.Raw(Json.Encode(jsonString))').replace(/(&quot\;)/g,"\"").replace("\"{","{").replace("}\"","}"));    
    function changeTimeList(e,id){
        if($("#Time_"+id).get(0).options.lenght<2)
        {
            for (let item in time[id]) {
            $("#Time_"+id).get(0).options.add(new Option(item,item));
            }
            //$("#Time_" + id).empty().get(0).options.add(new Option("selected?? Time", ""));
        }
        
    }
</script>
